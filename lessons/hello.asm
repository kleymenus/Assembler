include io.asm		;it's comment

stk segment stack		;stk - идентификатор, segment - служебное слово, означающее что происходит объявление сегмента, stack - служебное слово, которое указывает на определение стека
	db 100h dup(?)		;db - указывает на выделение байта, 100h - кол-во выделяемых директивой db байтов, dup(?) - (duplicate) размножить в выделенной памяти указанное значение 
ends stk			;ends - завершение объявление сегмента

data segment 					;начало объявления сегмента данных
	hello db "hello, world!", 13, 10, "$"	;hello - метка, 13,10 - перевод на следующую строку, $ - символ окончания строки
ends data					;завершение объявления сегмента данных

code segment 
	main proc					;начало объявления главной процедуры с именем main
		assume ds:data, cs:code, ss:stk		;дериктива сопаставляющая сегменты соответствующих сегментам регистра 

		push ds					;занесение в стек значения регистра ds, для извлечения данных из стека используется команнда pop
		sub ax,ax				;sub - вычитание из ax ax;
		push ax					;занесение в стек значение ax

		mov ax,data				;комманда mov - копирование данных, ax = data  
		mov ds, ax				;ds = ax;
		mov dx, offset hello			;заносим в регистр dx адресс соответствующей метке hello
		outstr					;вывод строки, (комманда определенная в io.asm
	
  	 	finish					;коммнада завершения работы приложение, она определена также в io.asm

	main endp					;завершение процедуры 
ends code						;завершение сегмента кода
end main						;точка входа в программу

